pipeline {
    agent any

    environment {
        KUBECONFIG = 'C:/Users/Lenovo/.kube/config'
        PYTHON_PATH = 'C:/Users/Lenovo/AppData/Local/Programs/Python/Python312/python.exe'
        PIP_PATH = 'C:/Users/Lenovo/AppData/Local/Programs/Python/Python312/Scripts/pip.exe'
    }

    stages {
        stage('Checkout SCM') {
            steps {
                git branch: 'master', url: 'https://github.com/AshwiniSrin/IBM_PROJECT.git'
            }
        }

        stage('Build & Push Docker Images') {
            steps {
                script {
                    withDockerRegistry([credentialsId: 'dockerhub-credential', url: '']) {
                        dir('Backend') {
                            bat 'docker build -t ashwini9535/backend:latest .'
                            bat 'docker push ashwini9535/backend:latest'
                        }
                        dir('Frontend') {
                            bat 'docker build -t ashwini9535/frontend:latest .'
                            bat 'docker push ashwini9535/frontend:latest'
                        }
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    bat 'kubectl config use-context minikube'
                    bat 'kubectl apply -f ./k8s/backend-deployment.yaml '
                    bat 'kubectl apply -f ./k8s/backend-service.yaml '
                    bat 'kubectl apply -f ./k8s/frontend-deployment.yaml '
                    bat 'kubectl apply -f ./k8s/frontend-service.yaml '
                }
            }
        }
         stage('Verify Deployment') {
            steps {
                script {
                    // Check Backend Deployment
                    bat 'kubectl get pods -n default'
                    
                    // Check Frontend Deployment
                    bat 'kubectl get svc -n default'
                }
            }
        }
    }
}
